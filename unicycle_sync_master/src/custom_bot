<launch>
  <!-- Turtlebot --> 
  <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
  <arg name="battery"           default="$(env TURTLEBOT_BATTERY)"      doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
  <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
  <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro]"/>
  <arg name="simulation"        default="$(env TURTLEBOT_SIMULATION)"   doc="set flags to indicate this turtle is run in simulation mode."/>
  <arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>
  <arg name="robot_name"        default="$(env TURTLEBOT_NAME)"         doc="used as a unique identifier and occasionally to preconfigure root namespaces, gateway/zeroconf ids etc."/>
  <arg name="robot_type"        default="$(env TURTLEBOT_TYPE)"         doc="just in case you are considering a 'variant' and want to make use of this."/>
  <arg name="manager"		default="mobile_base_nodelet_manager"	doc=""/>
  <param name="/use_sim_time" value="$(arg simulation)"/>

  <!-- 		include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml"> 		-->
  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <!-- important generally, but specifically utilised by the current app manager -->  
  <param name="robot/name" value="$(optenv ROBOT turtlebot)"/>
  <param name="robot/type" value="turtlebot"/>
  
<!--
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="5.0" />
  </node>
  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find turtlebot_bringup)/param/$(arg base)/diagnostics.yaml" />
  </node> -->


 <!--  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">		-->
  <!-- mobile base nodelet manager -->
  <!-- <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  
  <!-- mobile base -->

  
  <node pkg="nodelet" type="nodelet" name="mobile_base" args="load kobuki_node/KobukiNodelet $(arg manager)">
    <rosparam file="$(find kobuki_node)/param/base.yaml" command="load"/>
    <param name="device_port" value="$(arg serialport)" />

    <remap from="mobile_base/odom" to="odom"/>
    <!-- Don't do this - force applications to use a velocity mux for redirection  
      <remap from="mobile_base/commands/velocity" to="cmd_vel"/> 
    -->
    <remap from="mobile_base/enable" to="enable"/>
    <remap from="mobile_base/disable" to="disable"/>
    <remap from="mobile_base/joint_states" to="joint_states"/>
  </node>
  
  <!-- bumper/cliff to pointcloud -->
  <node pkg="nodelet" type="nodelet" name="bumper2pointcloud" args="load kobuki_bumper2pc/Bumper2PcNodelet mobile_base_nodelet_manager">
    <param name="pointcloud_radius" value="0.24"/>
    <remap from="bumper2pointcloud/pointcloud"   to="mobile_base/sensors/bumper_pointcloud"/>
    <remap from="bumper2pointcloud/core_sensors" to="mobile_base/sensors/core"/>
  </node>
  
  <!-- velocity commands multiplexer -->
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux" args="load yocs_cmd_vel_mux/CmdVelMuxNodelet mobile_base_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml"/>
    <remap from="cmd_vel_mux/output" to="mobile_base/commands/velocity"/>
  </node>


<!--  <include file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">		-->
  <node pkg="laptop_battery_monitor" type="laptop_battery.py" name="turtlebot_laptop_battery">
        <param name="acpi_path" type="string" value="$(arg battery)" />
  </node>

<!--
 <node name="Agent_04" pkg="unicycle_sync_slave" type="unicycle_sync_slave_node" >
 </node> -->
 
<!-- 	Launch communiction for desired topics only		-->
 <node name="master_discovery" pkg="master_discovery_fkie" type="master_discovery" output="screen"> 
	<rosparam param="mcast_group"> "224.0.0.1" </rosparam>
 </node>

 <node name="master_sync" pkg="master_sync_fkie" type="master_sync" output="screen" >
	<rosparam param="ignore_nodes"> ['/bumper2pointcloud', '/cmd_vel_mux', '/mobile_base', '/mobile_base_nodelet_manager', '/robot_state_publisher'] </rosparam>
	<rosparam param="sync_nodes"> ['/Agent_04'] </rosparam>
	<rosparam param="ignore_topics"> ['/Exo_03', '/cmd_vel_mux/input/navi'] </rosparam>	
	<rosparam param="sync_topics"> ['/Exo_04', '/position_04'] </rosparam> 
	<rosparam param="ignore_publishers"> ['velocity_publisher'] </rosparam>
	<rosparam param="ignore_subscribers"> ['Exosystem_03'] </rosparam>
 </node>

</launch>
